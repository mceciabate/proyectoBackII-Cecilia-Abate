server:
  port: ${PORT:${SERVER_PORT:8080}}
spring:
  application:
    name: api-gateway
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: http://localhost:8085/realms/DH
            user-name-atribute: preferred_username
            jwk-set-uri: http://localhost:8085/realms/DH/protocol/openid-connect/certs
        registration:
          gateway-api:
            provider: keycloak
            client-id: api-gateway
            client-secret: uaSiIS1Yc8neUsOba9f0oiSSY9PxJo6h
            scope: openid, email, profile, memebership, roles
            authorization-grant-type: authorization_code
            redirect-uri: 'http://localhost:8080/login/oauth2/code/keycloak'
#spring:
#  application:
#    name: api-gateway
#  security:
#    oauth2:
#      client:
#        provider:
#          keycloack-provider:
#            issuer-uri: http://localhost:8085/realms/DH
#    registration:
#      api-gateway-service:
#            provider: keycloak-provider
#            client-id: api-gateway
#            client-secret: 6tDvZ6rTk70D4ech8bGhKPWdLvhoYUiE
#            authorization-grant-type: authorization_code
#            redirect-uri: 'http://localhost:8080/login/oauth2/code/keycloak'
  cloud:
    gateway:
      default-filters:
        - TokenRelay
      routes:
         - id: msmovies
           uri: lb://api-movies
           predicates:
              - Path=/api/v1/movies/**
#           filters:
#              - StripPrefix=2
         - id: msusers
           uri: lb://api-users
           predicates:
              - Path=/api/v1/users/**
      discovery:
        locator:
          enabled: true

#  cloud:
#    gateway:
#      discovery:
#        locator:
#          enabled: true
#      routes:
#        - id: msmovies
#          uri: lb://api-movies
#          predicates:
#            - Path=/api/v1/movies/**
#        - id: msbills
#          uri: lb://api-bills
#          predicates:
#            - Path=/api/v1/bills/**
#        - id: msusers
#          uri: lb://api-users
#          predicates:
#            - Path=/api/v1/users/**

info:
  app:
    name: ${spring.application.name}

eureka:
   client:
      registerWithEureka: false
      fetchRegistry: true
      serviceURL:
         defaultZone: http://localhost:8761/eureka
management:
   endpoint:
      gateway:
         enabled: true
   endpoints:
      web:
         exposure:
#            include: gateway
            include: "*"



