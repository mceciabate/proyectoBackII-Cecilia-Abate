server:
  port: ${PORT:${SERVER_PORT:8080}}

spring:
  application:
    name: gateway
  security:
    oauth2:
      client:
        provider:
          keycloack-provider:
            issuer-uri: http://localhost:8085/realms/DH
    registration:
      api-gateway-service:
            provider: keycloak-provider
            client-id: api-gateway
            client-secret: 6tDvZ6rTk70D4ech8bGhKPWdLvhoYUiE
            authorization-grant-type: authorization_code
            redirect-uri: 'http://localhost:8080/login/oauth2/code/keycloak'
  cloud:
    gateway:
      discovery:
         locator:
            enabled: true
      default-filters:
          - TokenRelay
      routes:
        - id: msmovies
          uri: lb://api-movies
          predicates:
            - Path=/api/v1/movies/**
        - id: msusers
          uri: lb://api-users
          predicates:
            - Path=/api/v1/users/**

#  cloud:
#    gateway:
#      discovery:
#        locator:
#          enabled: true
#      routes:
#        - id: msmovies
#          uri: lb://api-movies
#          predicates:
#            - Path=/api/v1/movies/**
#        - id: msbills
#          uri: lb://api-bills
#          predicates:
#            - Path=/api/v1/bills/**
#        - id: msusers
#          uri: lb://api-users
#          predicates:
#            - Path=/api/v1/users/**

info:
  app:
    name: ${spring.application.name}

eureka:
   client:
      registerWithEureka: false
      fetchRegistry: true
      serviceURL:
         defaultZone: http://localhost:8761/eureka
management:
   endpoint:
      gateway:
         enabled: true
   endpoints:
      web:
         exposure:
            include: gateway



