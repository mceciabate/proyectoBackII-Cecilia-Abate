server:
  port: ${PORT:${SERVER_PORT:0}}

#idRandom: ${random.value}

spring:
  application:
    name: users-service
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: false
    serviceURL:
      defaultZone: http://localhost:8761/eureka
  instance:
    instance-id: ${spring.application.name}:${random.int}
management:
  endpoints:
    web:
      exposure:
        include: info, health
  info:
    env:
      enabled: true
    app:
      name: api usuarios
      version: 1.0.0
      description: Usuarios

  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: http://localhost:8085/realms/DH
          registration:
            keycloak:
              client-id: usuarios
              client-secret: 8YnE9JfYvkSEiwiogZZFxvs02LjTTnyH
              scope: openid
              redirect-uri: http://localhost:8082
#  security:
#     oauth2:
#       client:
#         provider:
#           keycloack-provider:
#             issuer-uri: http://localhost:8085/realms/DH
#         registration:
#          users-service:
#            provider: keycloak-provider
#            client-id: usuarios
#            client-secret: 8YnE9JfYvkSEiwiogZZFxvs02LjTTnyH
##            authorization-grant-type: authorization_code
##            redirect-uri: 'http://localhost:8085/login/oauth2/code/keycloak'

  springdoc:
    show-actuator: true
    swagger-ui:
      groups-order: DESC
      disable-swagger-default-url: true

  zipkin:
    baseUrl: http://localhost:9411/
    enabled: true
  rabbitmq:
    username: guest
    password: guest
    host: localhost
    port: 5672

  data:
    mongodb:
      host: localhost
      port: 27017
      password: pass
      username: admin
      authentication-database: admin
      database: usersdb

  main:
    allow-circular-references: true
app:
  cors:
    allowed-origins: http://localhost:3000



