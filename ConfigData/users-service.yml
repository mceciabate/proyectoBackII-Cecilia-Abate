server:
  port: ${PORT:${SERVER_PORT:0}}

#idRandom: ${random.value}

spring:
  application:
    name:  users-service
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: false
    serviceURL:
      defaultZone: http://localhost:8761/eureka
  instance:
    instance-id: ${spring.application.name}:${random.int}
management:
  endpoints:
    web:
      exposure:
        include: info, health
  info:
    env:
      enabled: true
    app:
      name: api usuarios
      version: 1.0.0
      description: Usuarios
  security:
     oauth2:
       client:
         provider:
           keycloack-provider:
              issuer-uri: http://localhost:8085/realms/DH
     registration:
       api-gateway-service:
         provider: keycloak-provider
         client-id: api-gateway
         client-secret: 6tDvZ6rTk70D4ech8bGhKPWdLvhoYUiE
         authorization-grant-type: client_credentials
         redirect-uri: "http://localhost:8080/realms/DH/protocol/openid-connect/token"



  springdoc:
    show-actuator: true
    swagger-ui:
      groups-order: DESC
      disable-swagger-default-url: true



  zipkin:
    baseUrl: http://localhost:9411/
    enabled: true
  rabbitmq:
    username: guest
    password: guest
    host: localhost
    port: 5672
  data:
    mongodb:
      host: localhost
      port: 27017
      password: pass
      username: admin
      authentication-database: admin
      database: usersdb

  main:
    allow-circular-references: true
app:
  cors:
    allowed-origins: http://localhost:3000



